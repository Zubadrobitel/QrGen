// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QrGen.DataBase;

#nullable disable

namespace QrGen.DataBase.Migrations
{
    [DbContext(typeof(ApplicationDataBaseContext))]
    [Migration("20250629123244_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QrGen.DataBase.Entities.QrCodeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InfoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("InfoId")
                        .IsUnique();

                    b.ToTable("QrCodes");
                });

            modelBuilder.Entity("QrGen.DataBase.Entities.QrInfoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestCount")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Qrinfos");
                });

            modelBuilder.Entity("QrGen.DataBase.Entities.QrCodeEntity", b =>
                {
                    b.HasOne("QrGen.DataBase.Entities.QrInfoEntity", "QrInfo")
                        .WithOne("QrCode")
                        .HasForeignKey("QrGen.DataBase.Entities.QrCodeEntity", "InfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QrInfo");
                });

            modelBuilder.Entity("QrGen.DataBase.Entities.QrInfoEntity", b =>
                {
                    b.Navigation("QrCode")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
